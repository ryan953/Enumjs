/* @flow */

type EnumDefinition<T> = {[key: $Enum<T>]: $Enum<T>};

declare type Enum<T> = {
  [key: $Enum<T>]: $Enum<T>,
  forEach: (iter: (val: $Enum<T>) => void) => void,
};

declare module 'Enumjs' {
  declare module.exports: {
    make: (dfn: EnumDefinition<*>) => Enum<*>,
    coalesce: (obj: Enum<*>, field: $Enum<*>) => ?$Enum<*>,
    enforce: (obj: Enum<*>, field: $Enum<*>) => $Enum<*>,
  };
};
